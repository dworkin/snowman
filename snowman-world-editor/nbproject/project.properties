application.title=SnowmanWorldEditor
application.vendor=owen
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/SnowmanWorldEditor.jar
dist.javadoc.dir=${dist.dir}/javadoc
excludes=
file.reference.Environment_jME2.0_v1.1.0.jar=../lib/Environment_jME2.0_v1.1.0.jar
file.reference.jme-audio.jar=../lib/jme-audio.jar
file.reference.jme-awt.jar=../lib/jme-awt.jar
file.reference.jme-collada.jar=../lib/jme-collada.jar
file.reference.jme-editors.jar=../lib/jme-editors.jar
file.reference.jme-effects.jar=../lib/jme-effects.jar
file.reference.jme-font.jar=../lib/jme-font.jar
file.reference.jme-gamestates.jar=../lib/jme-gamestates.jar
file.reference.jme-model.jar=../lib/jme-model.jar
file.reference.jme-scene.jar=../lib/jme-scene.jar
file.reference.jme-swt.jar=../lib/jme-swt.jar
file.reference.jme-terrain.jar=../lib/jme-terrain.jar
file.reference.jme-xml.jar=../lib/jme-xml.jar
file.reference.jme.jar=../lib/jme.jar
file.reference.main-java=src/main/java
file.reference.main-resources=src/main/resources
file.reference.MD5Importer_jME2.0_v1.2.4.jar=../lib/MD5Importer_jME2.0_v1.2.4.jar
file.reference.SADDL.jar=../lib/SADDL.jar
includes=**
jar.compress=false
javac.classpath=\
    ${file.reference.Environment_jME2.0_v1.1.0.jar}:\
    ${file.reference.jme-audio.jar}:\
    ${file.reference.jme-awt.jar}:\
    ${file.reference.jme-collada.jar}:\
    ${file.reference.jme-editors.jar}:\
    ${file.reference.jme-effects.jar}:\
    ${file.reference.jme-font.jar}:\
    ${file.reference.jme-gamestates.jar}:\
    ${file.reference.jme-model.jar}:\
    ${file.reference.jme-scene.jar}:\
    ${file.reference.jme-swt.jar}:\
    ${file.reference.jme-terrain.jar}:\
    ${file.reference.jme-xml.jar}:\
    ${file.reference.jme.jar}:\
    ${file.reference.SADDL.jar}:\
    ${file.reference.MD5Importer_jME2.0_v1.2.4.jar}:\
    ${reference.SnowmanCommon.jar}:\
    ${reference.SnowmanClient.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=false
javac.source=1.5
javac.target=1.5
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit.classpath}:\
    ${libs.junit_4.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
main.class=com.sun.darkstar.example.tool.WorldEditor
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
platform.active=default_platform
project.SnowmanClient=../snowman-client
project.SnowmanCommon=../snowman-common
reference.SnowmanClient.jar=${project.SnowmanClient}/dist/SnowmanClient.jar
reference.SnowmanCommon.jar=${project.SnowmanCommon}/dist/SnowmanCommon.jar
resources.dir=${file.reference.main-resources}
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=-Djava.library.path=../lib/lwjgl/linux-x86
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.dir=${file.reference.main-java}
